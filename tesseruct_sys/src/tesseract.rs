/* automatically generated by rust-bindgen */

#![allow(dead_code,
         non_camel_case_types,
         non_upper_case_globals,
         non_snake_case)]
/* manually added. */
use libc;

pub type int8_t = i8;
pub type int16_t = i16;
pub type int32_t = i32;
pub type int64_t = i64;
pub type uint8_t = u8;
pub type uint16_t = u16;
pub type uint32_t = u32;
pub type uint64_t = u64;
pub type size_t = usize;
pub type __off_t = ::std::os::raw::c_long;
pub type off_t = __off_t;
pub type FILE = libc::FILE;
/* end manually added section. */

pub enum TessResultRenderer { }
pub enum TessTextRenderer { }
pub enum TessHOcrRenderer { }
pub enum TessPDFRenderer { }
pub enum TessUnlvRenderer { }
pub enum TessBoxTextRenderer { }
pub enum TessBaseAPI { }
pub enum TessPageIterator { }
pub enum TessResultIterator { }
pub enum TessMutableIterator { }
pub enum TessChoiceIterator { }
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum TessOcrEngineMode {
    OEM_TESSERACT_ONLY = 0,
    OEM_CUBE_ONLY = 1,
    OEM_TESSERACT_CUBE_COMBINED = 2,
    OEM_DEFAULT = 3,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum TessPageSegMode {
    PSM_OSD_ONLY = 0,
    PSM_AUTO_OSD = 1,
    PSM_AUTO_ONLY = 2,
    PSM_AUTO = 3,
    PSM_SINGLE_COLUMN = 4,
    PSM_SINGLE_BLOCK_VERT_TEXT = 5,
    PSM_SINGLE_BLOCK = 6,
    PSM_SINGLE_LINE = 7,
    PSM_SINGLE_WORD = 8,
    PSM_CIRCLE_WORD = 9,
    PSM_SINGLE_CHAR = 10,
    PSM_SPARSE_TEXT = 11,
    PSM_SPARSE_TEXT_OSD = 12,
    PSM_COUNT = 13,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum TessPageIteratorLevel {
    RIL_BLOCK = 0,
    RIL_PARA = 1,
    RIL_TEXTLINE = 2,
    RIL_WORD = 3,
    RIL_SYMBOL = 4,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum TessPolyBlockType {
    PT_UNKNOWN = 0,
    PT_FLOWING_TEXT = 1,
    PT_HEADING_TEXT = 2,
    PT_PULLOUT_TEXT = 3,
    PT_EQUATION = 4,
    PT_INLINE_EQUATION = 5,
    PT_TABLE = 6,
    PT_VERTICAL_TEXT = 7,
    PT_CAPTION_TEXT = 8,
    PT_FLOWING_IMAGE = 9,
    PT_HEADING_IMAGE = 10,
    PT_PULLOUT_IMAGE = 11,
    PT_HORZ_LINE = 12,
    PT_VERT_LINE = 13,
    PT_NOISE = 14,
    PT_COUNT = 15,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum TessOrientation {
    ORIENTATION_PAGE_UP = 0,
    ORIENTATION_PAGE_RIGHT = 1,
    ORIENTATION_PAGE_DOWN = 2,
    ORIENTATION_PAGE_LEFT = 3,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum TessParagraphJustification {
    JUSTIFICATION_UNKNOWN = 0,
    JUSTIFICATION_LEFT = 1,
    JUSTIFICATION_CENTER = 2,
    JUSTIFICATION_RIGHT = 3,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum TessWritingDirection {
    WRITING_DIRECTION_LEFT_TO_RIGHT = 0,
    WRITING_DIRECTION_RIGHT_TO_LEFT = 1,
    WRITING_DIRECTION_TOP_TO_BOTTOM = 2,
}
#[derive(Copy, Clone)]
#[repr(u32)]
#[derive(Debug)]
pub enum TessTextlineOrder {
    TEXTLINE_ORDER_LEFT_TO_RIGHT = 0,
    TEXTLINE_ORDER_RIGHT_TO_LEFT = 1,
    TEXTLINE_ORDER_TOP_TO_BOTTOM = 2,
}
pub enum ETEXT_DESC { }
pub enum Pix { }
pub enum Boxa { }
pub enum Pixa { }
#[link(name = "tesseract", kind = "dylib")]
extern "C" {
    pub fn TessVersion() -> *const ::std::os::raw::c_char;
    pub fn TessDeleteText(text: *mut ::std::os::raw::c_char);
    pub fn TessDeleteTextArray(arr: *mut *mut ::std::os::raw::c_char);
    pub fn TessDeleteIntArray(arr: *mut ::std::os::raw::c_int);
    pub fn TessTextRendererCreate(outputbase: *const ::std::os::raw::c_char)
     -> *mut TessResultRenderer;
    pub fn TessHOcrRendererCreate(outputbase: *const ::std::os::raw::c_char)
     -> *mut TessResultRenderer;
    pub fn TessHOcrRendererCreate2(outputbase: *const ::std::os::raw::c_char,
                                   font_info: ::std::os::raw::c_int)
     -> *mut TessResultRenderer;
    pub fn TessPDFRendererCreate(outputbase: *const ::std::os::raw::c_char,
                                 datadir: *const ::std::os::raw::c_char)
     -> *mut TessResultRenderer;
    pub fn TessUnlvRendererCreate(outputbase: *const ::std::os::raw::c_char)
     -> *mut TessResultRenderer;
    pub fn TessBoxTextRendererCreate(outputbase:
                                         *const ::std::os::raw::c_char)
     -> *mut TessResultRenderer;
    pub fn TessDeleteResultRenderer(renderer: *mut TessResultRenderer);
    pub fn TessResultRendererInsert(renderer: *mut TessResultRenderer,
                                    next: *mut TessResultRenderer);
    pub fn TessResultRendererNext(renderer: *mut TessResultRenderer)
     -> *mut TessResultRenderer;
    pub fn TessResultRendererBeginDocument(renderer: *mut TessResultRenderer,
                                           title:
                                               *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn TessResultRendererAddImage(renderer: *mut TessResultRenderer,
                                      api: *mut TessBaseAPI)
     -> ::std::os::raw::c_int;
    pub fn TessResultRendererEndDocument(renderer: *mut TessResultRenderer)
     -> ::std::os::raw::c_int;
    pub fn TessResultRendererExtention(renderer: *mut TessResultRenderer)
     -> *const ::std::os::raw::c_char;
    pub fn TessResultRendererTitle(renderer: *mut TessResultRenderer)
     -> *const ::std::os::raw::c_char;
    pub fn TessResultRendererImageNum(renderer: *mut TessResultRenderer)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPICreate() -> *mut TessBaseAPI;
    pub fn TessBaseAPIDelete(handle: *mut TessBaseAPI);
    pub fn TessBaseAPIGetOpenCLDevice(handle: *mut TessBaseAPI,
                                      device:
                                          *mut *mut ::std::os::raw::c_void)
     -> size_t;
    pub fn TessBaseAPISetInputName(handle: *mut TessBaseAPI,
                                   name: *const ::std::os::raw::c_char);
    pub fn TessBaseAPIGetInputName(handle: *mut TessBaseAPI)
     -> *const ::std::os::raw::c_char;
    pub fn TessBaseAPISetInputImage(handle: *mut TessBaseAPI, pix: *mut Pix);
    pub fn TessBaseAPIGetInputImage(handle: *mut TessBaseAPI) -> *mut Pix;
    pub fn TessBaseAPIGetSourceYResolution(handle: *mut TessBaseAPI)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetDatapath(handle: *mut TessBaseAPI)
     -> *const ::std::os::raw::c_char;
    pub fn TessBaseAPISetOutputName(handle: *mut TessBaseAPI,
                                    name: *const ::std::os::raw::c_char);
    pub fn TessBaseAPISetVariable(handle: *mut TessBaseAPI,
                                  name: *const ::std::os::raw::c_char,
                                  value: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPISetDebugVariable(handle: *mut TessBaseAPI,
                                       name: *const ::std::os::raw::c_char,
                                       value: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetIntVariable(handle: *const TessBaseAPI,
                                     name: *const ::std::os::raw::c_char,
                                     value: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetBoolVariable(handle: *const TessBaseAPI,
                                      name: *const ::std::os::raw::c_char,
                                      value: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetDoubleVariable(handle: *const TessBaseAPI,
                                        name: *const ::std::os::raw::c_char,
                                        value: *mut f64)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetStringVariable(handle: *const TessBaseAPI,
                                        name: *const ::std::os::raw::c_char)
     -> *const ::std::os::raw::c_char;
    pub fn TessBaseAPIPrintVariables(handle: *const TessBaseAPI,
                                     fp: *mut FILE);
    pub fn TessBaseAPIPrintVariablesToFile(handle: *const TessBaseAPI,
                                           filename:
                                               *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIInit1(handle: *mut TessBaseAPI,
                            datapath: *const ::std::os::raw::c_char,
                            language: *const ::std::os::raw::c_char,
                            oem: TessOcrEngineMode,
                            configs: *mut *mut ::std::os::raw::c_char,
                            configs_size: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIInit2(handle: *mut TessBaseAPI,
                            datapath: *const ::std::os::raw::c_char,
                            language: *const ::std::os::raw::c_char,
                            oem: TessOcrEngineMode) -> ::std::os::raw::c_int;
    pub fn TessBaseAPIInit3(handle: *mut TessBaseAPI,
                            datapath: *const ::std::os::raw::c_char,
                            language: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIInit4(handle: *mut TessBaseAPI,
                            datapath: *const ::std::os::raw::c_char,
                            language: *const ::std::os::raw::c_char,
                            mode: TessOcrEngineMode,
                            configs: *mut *mut ::std::os::raw::c_char,
                            configs_size: ::std::os::raw::c_int,
                            vars_vec: *mut *mut ::std::os::raw::c_char,
                            vars_values: *mut *mut ::std::os::raw::c_char,
                            vars_vec_size: size_t,
                            set_only_non_debug_params: ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetInitLanguagesAsString(handle: *const TessBaseAPI)
     -> *const ::std::os::raw::c_char;
    pub fn TessBaseAPIGetLoadedLanguagesAsVector(handle: *const TessBaseAPI)
     -> *mut *mut ::std::os::raw::c_char;
    pub fn TessBaseAPIGetAvailableLanguagesAsVector(handle:
                                                        *const TessBaseAPI)
     -> *mut *mut ::std::os::raw::c_char;
    pub fn TessBaseAPIInitLangMod(handle: *mut TessBaseAPI,
                                  datapath: *const ::std::os::raw::c_char,
                                  language: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIInitForAnalysePage(handle: *mut TessBaseAPI);
    pub fn TessBaseAPIReadConfigFile(handle: *mut TessBaseAPI,
                                     filename: *const ::std::os::raw::c_char);
    pub fn TessBaseAPIReadDebugConfigFile(handle: *mut TessBaseAPI,
                                          filename:
                                              *const ::std::os::raw::c_char);
    pub fn TessBaseAPISetPageSegMode(handle: *mut TessBaseAPI,
                                     mode: TessPageSegMode);
    pub fn TessBaseAPIGetPageSegMode(handle: *const TessBaseAPI)
     -> TessPageSegMode;
    pub fn TessBaseAPIRect(handle: *mut TessBaseAPI,
                           imagedata: *const ::std::os::raw::c_uchar,
                           bytes_per_pixel: ::std::os::raw::c_int,
                           bytes_per_line: ::std::os::raw::c_int,
                           left: ::std::os::raw::c_int,
                           top: ::std::os::raw::c_int,
                           width: ::std::os::raw::c_int,
                           height: ::std::os::raw::c_int)
     -> *mut ::std::os::raw::c_char;
    pub fn TessBaseAPIClearAdaptiveClassifier(handle: *mut TessBaseAPI);
    pub fn TessBaseAPISetImage(handle: *mut TessBaseAPI,
                               imagedata: *const ::std::os::raw::c_uchar,
                               width: ::std::os::raw::c_int,
                               height: ::std::os::raw::c_int,
                               bytes_per_pixel: ::std::os::raw::c_int,
                               bytes_per_line: ::std::os::raw::c_int);
    pub fn TessBaseAPISetImage2(handle: *mut TessBaseAPI, pix: *mut Pix);
    pub fn TessBaseAPISetSourceResolution(handle: *mut TessBaseAPI,
                                          ppi: ::std::os::raw::c_int);
    pub fn TessBaseAPISetRectangle(handle: *mut TessBaseAPI,
                                   left: ::std::os::raw::c_int,
                                   top: ::std::os::raw::c_int,
                                   width: ::std::os::raw::c_int,
                                   height: ::std::os::raw::c_int);
    pub fn TessBaseAPIGetThresholdedImage(handle: *mut TessBaseAPI)
     -> *mut Pix;
    pub fn TessBaseAPIGetRegions(handle: *mut TessBaseAPI,
                                 pixa: *mut *mut Pixa) -> *mut Boxa;
    pub fn TessBaseAPIGetTextlines(handle: *mut TessBaseAPI,
                                   pixa: *mut *mut Pixa,
                                   blockids: *mut *mut ::std::os::raw::c_int)
     -> *mut Boxa;
    pub fn TessBaseAPIGetTextlines1(handle: *mut TessBaseAPI,
                                    raw_image: ::std::os::raw::c_int,
                                    raw_padding: ::std::os::raw::c_int,
                                    pixa: *mut *mut Pixa,
                                    blockids: *mut *mut ::std::os::raw::c_int,
                                    paraids: *mut *mut ::std::os::raw::c_int)
     -> *mut Boxa;
    pub fn TessBaseAPIGetStrips(handle: *mut TessBaseAPI,
                                pixa: *mut *mut Pixa,
                                blockids: *mut *mut ::std::os::raw::c_int)
     -> *mut Boxa;
    pub fn TessBaseAPIGetWords(handle: *mut TessBaseAPI, pixa: *mut *mut Pixa)
     -> *mut Boxa;
    pub fn TessBaseAPIGetConnectedComponents(handle: *mut TessBaseAPI,
                                             cc: *mut *mut Pixa) -> *mut Boxa;
    pub fn TessBaseAPIGetComponentImages(handle: *mut TessBaseAPI,
                                         level: TessPageIteratorLevel,
                                         text_only: ::std::os::raw::c_int,
                                         pixa: *mut *mut Pixa,
                                         blockids:
                                             *mut *mut ::std::os::raw::c_int)
     -> *mut Boxa;
    pub fn TessBaseAPIGetComponentImages1(handle: *mut TessBaseAPI,
                                          level: TessPageIteratorLevel,
                                          text_only: ::std::os::raw::c_int,
                                          raw_image: ::std::os::raw::c_int,
                                          raw_padding: ::std::os::raw::c_int,
                                          pixa: *mut *mut Pixa,
                                          blockids:
                                              *mut *mut ::std::os::raw::c_int,
                                          paraids:
                                              *mut *mut ::std::os::raw::c_int)
     -> *mut Boxa;
    pub fn TessBaseAPIGetThresholdedImageScaleFactor(handle:
                                                         *const TessBaseAPI)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIDumpPGM(handle: *mut TessBaseAPI,
                              filename: *const ::std::os::raw::c_char);
    pub fn TessBaseAPIAnalyseLayout(handle: *mut TessBaseAPI)
     -> *mut TessPageIterator;
    pub fn TessBaseAPIRecognize(handle: *mut TessBaseAPI,
                                monitor: *mut ETEXT_DESC)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIRecognizeForChopTest(handle: *mut TessBaseAPI,
                                           monitor: *mut ETEXT_DESC)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIProcessPages(handle: *mut TessBaseAPI,
                                   filename: *const ::std::os::raw::c_char,
                                   retry_config:
                                       *const ::std::os::raw::c_char,
                                   timeout_millisec: ::std::os::raw::c_int,
                                   renderer: *mut TessResultRenderer)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIProcessPage(handle: *mut TessBaseAPI, pix: *mut Pix,
                                  page_index: ::std::os::raw::c_int,
                                  filename: *const ::std::os::raw::c_char,
                                  retry_config: *const ::std::os::raw::c_char,
                                  timeout_millisec: ::std::os::raw::c_int,
                                  renderer: *mut TessResultRenderer)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetIterator(handle: *mut TessBaseAPI)
     -> *mut TessResultIterator;
    pub fn TessBaseAPIGetMutableIterator(handle: *mut TessBaseAPI)
     -> *mut TessMutableIterator;
    pub fn TessBaseAPIGetUTF8Text(handle: *mut TessBaseAPI)
     -> *mut ::std::os::raw::c_char;
    pub fn TessBaseAPIGetHOCRText(handle: *mut TessBaseAPI,
                                  page_number: ::std::os::raw::c_int)
     -> *mut ::std::os::raw::c_char;
    pub fn TessBaseAPIGetBoxText(handle: *mut TessBaseAPI,
                                 page_number: ::std::os::raw::c_int)
     -> *mut ::std::os::raw::c_char;
    pub fn TessBaseAPIGetUNLVText(handle: *mut TessBaseAPI)
     -> *mut ::std::os::raw::c_char;
    pub fn TessBaseAPIMeanTextConf(handle: *mut TessBaseAPI)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIAllWordConfidences(handle: *mut TessBaseAPI)
     -> *mut ::std::os::raw::c_int;
    pub fn TessBaseAPIAdaptToWordStr(handle: *mut TessBaseAPI,
                                     mode: TessPageSegMode,
                                     wordstr: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIClear(handle: *mut TessBaseAPI);
    pub fn TessBaseAPIEnd(handle: *mut TessBaseAPI);
    pub fn TessBaseAPIIsValidWord(handle: *mut TessBaseAPI,
                                  word: *const ::std::os::raw::c_char)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetTextDirection(handle: *mut TessBaseAPI,
                                       out_offset: *mut ::std::os::raw::c_int,
                                       out_slope: *mut f32)
     -> ::std::os::raw::c_int;
    pub fn TessBaseAPIGetUnichar(handle: *mut TessBaseAPI,
                                 unichar_id: ::std::os::raw::c_int)
     -> *const ::std::os::raw::c_char;
    pub fn TessBaseAPISetMinOrientationMargin(handle: *mut TessBaseAPI,
                                              margin: f64);
    pub fn TessPageIteratorDelete(handle: *mut TessPageIterator);
    pub fn TessPageIteratorCopy(handle: *const TessPageIterator)
     -> *mut TessPageIterator;
    pub fn TessPageIteratorBegin(handle: *mut TessPageIterator);
    pub fn TessPageIteratorNext(handle: *mut TessPageIterator,
                                level: TessPageIteratorLevel)
     -> ::std::os::raw::c_int;
    pub fn TessPageIteratorIsAtBeginningOf(handle: *const TessPageIterator,
                                           level: TessPageIteratorLevel)
     -> ::std::os::raw::c_int;
    pub fn TessPageIteratorIsAtFinalElement(handle: *const TessPageIterator,
                                            level: TessPageIteratorLevel,
                                            element: TessPageIteratorLevel)
     -> ::std::os::raw::c_int;
    pub fn TessPageIteratorBoundingBox(handle: *const TessPageIterator,
                                       level: TessPageIteratorLevel,
                                       left: *mut ::std::os::raw::c_int,
                                       top: *mut ::std::os::raw::c_int,
                                       right: *mut ::std::os::raw::c_int,
                                       bottom: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn TessPageIteratorBlockType(handle: *const TessPageIterator)
     -> TessPolyBlockType;
    pub fn TessPageIteratorGetBinaryImage(handle: *const TessPageIterator,
                                          level: TessPageIteratorLevel)
     -> *mut Pix;
    pub fn TessPageIteratorGetImage(handle: *const TessPageIterator,
                                    level: TessPageIteratorLevel,
                                    padding: ::std::os::raw::c_int,
                                    original_image: *mut Pix,
                                    left: *mut ::std::os::raw::c_int,
                                    top: *mut ::std::os::raw::c_int)
     -> *mut Pix;
    pub fn TessPageIteratorBaseline(handle: *const TessPageIterator,
                                    level: TessPageIteratorLevel,
                                    x1: *mut ::std::os::raw::c_int,
                                    y1: *mut ::std::os::raw::c_int,
                                    x2: *mut ::std::os::raw::c_int,
                                    y2: *mut ::std::os::raw::c_int)
     -> ::std::os::raw::c_int;
    pub fn TessPageIteratorOrientation(handle: *mut TessPageIterator,
                                       orientation: *mut TessOrientation,
                                       writing_direction:
                                           *mut TessWritingDirection,
                                       textline_order: *mut TessTextlineOrder,
                                       deskew_angle: *mut f32);
    pub fn TessPageIteratorParagraphInfo(handle: *mut TessPageIterator,
                                         justification:
                                             *mut TessParagraphJustification,
                                         is_list_item:
                                             *mut ::std::os::raw::c_int,
                                         is_crown: *mut ::std::os::raw::c_int,
                                         first_line_indent:
                                             *mut ::std::os::raw::c_int);
    pub fn TessResultIteratorDelete(handle: *mut TessResultIterator);
    pub fn TessResultIteratorCopy(handle: *const TessResultIterator)
     -> *mut TessResultIterator;
    pub fn TessResultIteratorGetPageIterator(handle: *mut TessResultIterator)
     -> *mut TessPageIterator;
    pub fn TessResultIteratorGetPageIteratorConst(handle:
                                                      *const TessResultIterator)
     -> *const TessPageIterator;
    pub fn TessResultIteratorGetChoiceIterator(handle:
                                                   *const TessResultIterator)
     -> *mut TessChoiceIterator;
    pub fn TessResultIteratorNext(handle: *mut TessResultIterator,
                                  level: TessPageIteratorLevel)
     -> ::std::os::raw::c_int;
    pub fn TessResultIteratorGetUTF8Text(handle: *const TessResultIterator,
                                         level: TessPageIteratorLevel)
     -> *mut ::std::os::raw::c_char;
    pub fn TessResultIteratorConfidence(handle: *const TessResultIterator,
                                        level: TessPageIteratorLevel) -> f32;
    pub fn TessResultIteratorWordRecognitionLanguage(handle:
                                                         *const TessResultIterator)
     -> *const ::std::os::raw::c_char;
    pub fn TessResultIteratorWordFontAttributes(handle:
                                                    *const TessResultIterator,
                                                is_bold:
                                                    *mut ::std::os::raw::c_int,
                                                is_italic:
                                                    *mut ::std::os::raw::c_int,
                                                is_underlined:
                                                    *mut ::std::os::raw::c_int,
                                                is_monospace:
                                                    *mut ::std::os::raw::c_int,
                                                is_serif:
                                                    *mut ::std::os::raw::c_int,
                                                is_smallcaps:
                                                    *mut ::std::os::raw::c_int,
                                                pointsize:
                                                    *mut ::std::os::raw::c_int,
                                                font_id:
                                                    *mut ::std::os::raw::c_int)
     -> *const ::std::os::raw::c_char;
    pub fn TessResultIteratorWordIsFromDictionary(handle:
                                                      *const TessResultIterator)
     -> ::std::os::raw::c_int;
    pub fn TessResultIteratorWordIsNumeric(handle: *const TessResultIterator)
     -> ::std::os::raw::c_int;
    pub fn TessResultIteratorSymbolIsSuperscript(handle:
                                                     *const TessResultIterator)
     -> ::std::os::raw::c_int;
    pub fn TessResultIteratorSymbolIsSubscript(handle:
                                                   *const TessResultIterator)
     -> ::std::os::raw::c_int;
    pub fn TessResultIteratorSymbolIsDropcap(handle:
                                                 *const TessResultIterator)
     -> ::std::os::raw::c_int;
    pub fn TessChoiceIteratorDelete(handle: *mut TessChoiceIterator);
    pub fn TessChoiceIteratorNext(handle: *mut TessChoiceIterator)
     -> ::std::os::raw::c_int;
    pub fn TessChoiceIteratorGetUTF8Text(handle: *const TessChoiceIterator)
     -> *const ::std::os::raw::c_char;
    pub fn TessChoiceIteratorConfidence(handle: *const TessChoiceIterator)
     -> f32;
}
